<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dr. rer. nat. Sören Wilke</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Dr. rer. nat. Sören Wilke</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Sören Wilke 2020</copyright><lastBuildDate>Sun, 05 Apr 2020 18:28:03 +0200</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Dr. rer. nat. Sören Wilke</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Example Page 1</title>
      <link>/courses/example/example1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example1/</guid>
      <description>&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page 2</title>
      <link>/courses/example/example2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example2/</guid>
      <description>&lt;p&gt;Here are some more tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-3&#34;&gt;Tip 3&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-4&#34;&gt;Tip 4&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Constructing Mineral Phase Diagrams in R</title>
      <link>/post/phase_diagrams/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/phase_diagrams/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#preface&#34;&gt;Preface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#preparing-input-data&#34;&gt;Preparing Input Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example-1-experimental-data-set&#34;&gt;Example 1: Experimental Data set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example-2-thermodynamic-model-melts-data-set&#34;&gt;Example 2: Thermodynamic Model (MELTS) Data set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#concluding-remarks&#34;&gt;Concluding Remarks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;preface&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;In petrology it is common to be confronted with or thinking about mineral phase stability. Which minerals form in a certain spot (of melt) is a complex matter depending not only on the chemical composition but also on a multitude of physical factors. The most prominent parameters are probably temperature and pressure, but they are far from being the only variables.&lt;/p&gt;
&lt;p&gt;For example there is oxygen fugacity, a somewhat arcane concept describing the level of oxidation of a magma, which potentially has a huge impact on the phase assemblage that forms. Michael Anenburg has been writing a lot about this fascinating topic and highly recommend his Twitter tutorials.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;A small oxygen fugacity thread. There&amp;#39;s a common misconception that ƒO₂ = pO₂ (i.e. partial pressure of oxygen).&lt;br&gt;Let&amp;#39;s have a look at some numbers. &lt;a href=&#34;https://t.co/fAJqlIbOCJ&#34;&gt;pic.twitter.com/fAJqlIbOCJ&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michael Anenburg (@manenbu) &lt;a href=&#34;https://twitter.com/manenbu/status/1251831777754181632?ref_src=twsrc%5Etfw&#34;&gt;April 19, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;But I am digressing. Phase stability data, by and at large, can be obtained mostly through three ways:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;You can do an petrological experiment. You put some rock powder into what is basically a very sophisticated oven and have total control over the parameters (well, in theory, at least). The downside is that this approach is slow and laborious. Access to experimental facilities is restricted and operating pressure vessels requires special training. Also some of them have a tendency to explode and wreck varying degrees of havoc along the way.&lt;/li&gt;
&lt;li&gt;You can investigate a natural rock sample, trying to figure out the environment which lead to its formation e.g. by applying geothermometers and geobarometers. It is a fascinating field and I should write a blog post about it one day. The downside here is that those methods often come with some significant error-bars.&lt;/li&gt;
&lt;li&gt;The third method I can think of is to make use of thermodynamic modelling. The advantage clearly is that this approach comes at a fraction of the cost (both money and time) of the other two and is assumed to be considerably more accurate than classical geothermometry and co. A downside is that thermodynamic modeling requires a lot of knowledge about both petrology and the modeling technology of your choice, before you can even start creating anything insightful. Also, most modern petrology-centered modeling tools I know about have rather crude interfaces that can considerably hamper your workflow.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Whatever your line of petrological work is: after obtaining phase stability data, the next big task is to turn that data into a compelling visualization. The classical way to do so is creating a &lt;a href=&#34;https://en.wikipedia.org/wiki/Phase_diagram&#34;&gt;Phase-Diagram&lt;/a&gt;. Here is an example of one I did many years ago for my master thesis:&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;msc_P-T_0CO2.png&#34; alt=&#34;Experimental phase stability of a nephelinitic melt&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;&lt;em&gt;Experimental phase stability of a nephelinitic melt&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So here we see basically two main features. There is some kind of table-like graphical indicator displaying the phase assemblage for given parameter-combinations. Then there are some annotated lines, stating explicitly when a phase joins or leaves the assemblage. I thought it wouldn’t be so hard to translate these two relatively simple features into code, so that we could have some fun automatizing this otherwise slightly dull task. We will see about that.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;preparing-input-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Preparing Input Data&lt;/h2&gt;
&lt;p&gt;The above phase-diagram was drawn by hand in a &lt;a href=&#34;https://en.wikipedia.org/wiki/Vector_graphics&#34;&gt;vector graphics&lt;/a&gt; program. That’s ok if you only have a couple of small data-sets, but especially when you work with modeling data, it would be better to have an automatic approach that gives you a fast visual feedback of what you are dealing with. That would come with the additional advantage of making your work reproducible and therefore potentially more attractive to collaborators and reviewers. In this blog-post we will explore the possibilities offered in &lt;a href=&#34;https://www.r-project.org/&#34;&gt;R&lt;/a&gt; to generate phase diagrams. For a start, let’s try to recreate my old master thesis’s illustration with code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# These are packages needed for data wrangling.
# Note that their loading order is not arbitrary, 
# as e.g. the function &amp;#39;select&amp;#39; exists for both the raster and the tidyverse
# package (via dplyr) and we will need only dplyr::select()

library(raster)
library(sf)
library(smoothr)
library(tidyverse)
library(ggspatial)


# These are packages to style output such as tables and plots
library(kableExtra)
library(paletteer)
library(gridExtra)
library(grid)
library(ggpmisc)

# You can download the phase stability data from my old thesis from github
df_exp &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/Ignimbrit/exchange/master/data/2020/OL_EXP_PHASES.csv&amp;quot;)

phases_exp &amp;lt;- df_exp %&amp;gt;% dplyr::select(-P_MPa, -T_C) %&amp;gt;% colnames() 

# Let&amp;#39;s inspect the data!
kableExtra::kable(df_exp)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
P_MPa
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
T_C
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Combeite
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Corundum
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Magnetite
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Melanite
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Nepheline
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Pyroxene
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
800
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
200
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
800
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
800
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
750
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
200
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
750
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
750
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
700
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
200
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
700
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
700
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
650
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
200
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
650
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
650
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can see that we have to independent variable &lt;code&gt;T_C&lt;/code&gt; (Temperature in Celsius) and &lt;code&gt;P_MPa&lt;/code&gt; (Pressure in Mega-Pascal) that are combined to form a regular, rectangular grid. Each combination of P and T represents an actual experiment that was performed in a &lt;a href=&#34;https://www.mineralogie.uni-hannover.de/542.html?&amp;amp;L=1&#34;&gt;CSPV&lt;/a&gt; and later analyzed by &lt;a href=&#34;https://en.wikipedia.org/wiki/Electron_microprobe&#34;&gt;microprobe&lt;/a&gt;. From the analyses we know which minerals showed up (&lt;code&gt;TRUE&lt;/code&gt;) at a given combination of conditions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# We sould also take a quick look at some kind of preliminary graph to
# get a &amp;#39;feeling&amp;#39; for the visual space we will be working with

df_exp %&amp;gt;% tidyr::pivot_longer(Combeite:Pyroxene) %&amp;gt;% 
  dplyr::filter(value == TRUE) %&amp;gt;% 
  ggplot(aes(x = T_C, y = P_MPa, color = name)) +
  geom_jitter(width = 10, height = 10, size = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-14-phase-stability-diagrams/index_files/figure-html/inspect_exp-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So this is what we will be trying to transform into a phase diagram. The way we will attempt that is essentially to draw some kind of polygons of convex hulls around groups of point clouds as shown above. This is why at the startup of this script we loaded some packages usually associated with spatial data manipulation. Those packages provide us with a comprehensive toolbox for manipulating polygons. That we can leverage spatial algorithms for ggplot2 plots is possible thanks to the ggspatial package written by &lt;a href=&#34;https://twitter.com/paleolimbot&#34;&gt;Dr. Dewey Dunnington&lt;/a&gt; who demonstrated the approach in &lt;a href=&#34;https://gist.github.com/paleolimbot/e854c098c6d95330c361014276b5a8db&#34;&gt;this gist&lt;/a&gt;, related to an excellent &lt;a href=&#34;https://fishandwhistle.net/post/2018/pourbaix-ish-diagrams-using-phreeqc-and-r/&#34;&gt;blog post about hydrogeochemical modelling&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to bring &lt;code&gt;df_exp&lt;/code&gt; in a form that can be plotted as a phase diagram we need to do quite a lot of data wrangling. I realize that this might not be an interesting read for everyone, so I’ve hidden the details of the data transformation in the folded tab below. You can look at it by clicking the red textline. If you are only interested in the actual plotting procedure, you can keep it folded and just move on.&lt;/p&gt;
&lt;details&gt;
&lt;p&gt;&lt;summary&gt; &lt;span style=&#34;color: red;&#34;&gt;Show me the detailed data treatment procedure!&lt;/span&gt;&lt;/summary&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color: grey;&#34;&gt;Alright, welcome to the machine room of this blog post. Here we will define a set of functions to transform the table shown above into data formats accepted by ggplot2’s geoms. I will be working with functions rather than manipulating the input data directly, so that we can easily apply our workflow to other datasets.&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# First let&amp;#39;s create away to find all existing combinations of phases
# in the dataset and assign a group-variable to each of them

phase_group &amp;lt;- function(x, ...){

  # the input of the function is supposed to be a dataframe from which 
  # phase-related coloumns can be selected just like with dplyr::select()
  df &amp;lt;- x %&amp;gt;% dplyr::select(!!!enquos(...))
  force(df)
  
  phase_names &amp;lt;- colnames(df)
  
  # the next step ist to find the phase assemblage coexisting with each
  # combintation of P &amp;amp; T
  phase_list_lgl &amp;lt;- purrr::pmap(as.list(df), c)
  
  phase_list_chr &amp;lt;- vector(&amp;quot;list&amp;quot;, length = length(phase_list_lgl))
  for(i in seq_along(phase_list_chr)){
    phase_list_chr[[i]] &amp;lt;- phase_names[phase_list_lgl[[i]]]
  }
  
  # now we save the information in a single string (Phase1 + Phase4 + ...)
  # per observation.
  combinations &amp;lt;- purrr::map_chr(
      phase_list_chr,
      .f = paste,
      collapse = &amp;quot; + &amp;quot;
    ) %&amp;gt;% 
    factor(
      levels = sort(unique(.))
    )
  
  # Having a unique string (or rather factor) is nice, but some operations
  # require numbered phase groups
  x %&amp;gt;% mutate(
    phase_combo = combinations
  ) %&amp;gt;% 
    mutate(
      group_no = as.integer(phase_combo)
    )
}


# Now that we can identify the unique phase assemblage for each observation
# we can make a raster. Think: x = T, y = P, z = assemblage no.
# This way we can descirbe the area that is occupied by a certain assemblage.
polygonize_phasegroup &amp;lt;- function(x, y, z){
  
  #Note that this function expects a regular grid
  raster::rasterFromXYZ(
    data.frame(
      x = x,
      y = y,
      z = z
    )
  ) %&amp;gt;% # converting to polygons
    raster::rasterToPolygons(dissolve = TRUE) %&amp;gt;% 
    sf::st_as_sf() %&amp;gt;% 
    ggspatial::df_spatial() # converting to ggplot2 polygon notation
}


# What we did to identify the area occupied by a certain combination of
# phases we can now more or less repeat to find the stability field 
# for a single phase
find_phase_border &amp;lt;- function(
  phase_exists, x, y, raster_res = c(NA, NA), size = 1, smooth_factor = 1
){
  rawdat &amp;lt;- dplyr::bind_cols(x = x, y = y, z = phase_exists)
  df &amp;lt;- rawdat %&amp;gt;% 
    dplyr::filter(z) %&amp;gt;% 
    dplyr::mutate(z = as.integer(z))
  
  # Make sure we have a regular grid 
  phase_grid &amp;lt;- expand.grid(x = sort(unique(df$x)), y = unique(sort(df$y))) %&amp;gt;% 
    dplyr::left_join(
      df,
      by = c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;)
    ) %&amp;gt;% 
    as.data.frame()
  
  phase_grid$z[is.na(phase_grid$z)] &amp;lt;- 0
  
  # translate to polygon, smoothing the edges a little
  coord_sf &amp;lt;- raster::rasterFromXYZ(
    phase_grid,
    res = raster_res
  ) %&amp;gt;%  
    raster::rasterToPolygons(dissolve = TRUE) %&amp;gt;%
    sf::st_as_sf() %&amp;gt;% 
    dplyr::filter(z == 1) %&amp;gt;% 
    smoothr::smooth(method = &amp;quot;ksmooth&amp;quot;, smoothness = smooth_factor) 
  
  # resize to avoid overlaps in the plot
  centroid &amp;lt;- sf::st_centroid(coord_sf)
  smaller_sf &amp;lt;- (coord_sf - centroid) * size + centroid
  
  # translate to ggplot2 geom_polygon notation
  smaller_sf %&amp;gt;%
    sf::st_set_geometry(&amp;quot;geometry&amp;quot;) %&amp;gt;% 
    ggspatial::df_spatial()
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;(…)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;example-1-experimental-data-set&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example 1: Experimental Data set&lt;/h2&gt;
&lt;p&gt;So here we continue equipped with some additional functions we defined in the folded chunk. Now we can draw polygons that will mark the area occupied by a distinct assemblage.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Create grouping variable for phase assemblages and assign to every 
# combination of P &amp;amp; T

df_exp_grouped &amp;lt;- phase_group(df_exp, Combeite:Pyroxene)

# make polygons for unique combinations of minerals
polygons_exp &amp;lt;- polygonize_phasegroup(
  x = df_exp_grouped$T_C,
  y = df_exp_grouped$P_MPa,
  z = df_exp_grouped$group_no
) %&amp;gt;% 
  left_join(
    select(df_exp_grouped, group_no, phase_combo),
    by = c(&amp;quot;z&amp;quot; = &amp;quot;group_no&amp;quot;)
  )

# Inspect what we just created
ggplot(
  data = polygons_exp,
  mapping = aes(
    x = x, y = y, z = z, fill = feature_id
  )
) +
  geom_polygon()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-14-phase-stability-diagrams/index_files/figure-html/phase_polygons-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Well, this goes in the right direction but there is still quite some work to do. We can see now the area associated with a distinct assemblage, but the labeling sure can be improved a lot. Second, we should also find a way to communicate clearly, which change in mineral stability leads to the modification of an assemblage (e.g. is magnetite coming in or going out?). Let’s see if we can make the info we’ve got a bit more explicit in the plot. We will start by collecting the phase stability areas of the single minerals.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# make polygons showing the area of stability for every single phase
# Note that the function &amp;quot;find_phase_border&amp;quot; was prepared in the folded chunk.
phase_borders_exp &amp;lt;-  purrr::map(
  dplyr::select(df_exp_grouped, Combeite:Pyroxene),
  find_phase_border,
  x = df_exp_grouped$T_C,
  y = df_exp_grouped$P_MPa,
  raster_res = c(50, 100),
  size = 1.1
)

# gather the polygons associated with the minerals in a single tibble
border_df_exp &amp;lt;- purrr::map2_dfr(
  phase_borders_exp,
  names(phase_borders_exp),
  function(.x, .y){mutate(.x, Phase = .y)}
) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we want to reproduce the table-shaped annotations from the original drawing that give such a nice and quick overview about the composition of the assemblage&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# abbreviate the mineralnames to save space
# c.f. https://www.unige.ch/sciences/terre/research/Groups/mineral_resources/opaques/ore_abbreviations.php
abbrv &amp;lt;- c(&amp;quot;cmb&amp;quot;, &amp;quot;crn&amp;quot;, &amp;quot;mgt&amp;quot;, &amp;quot;mel&amp;quot;, &amp;quot;nph&amp;quot;, &amp;quot;cpx&amp;quot;)

# The table-shaped annotation label of the assemblage should be associated
# with the assemblage polygons we&amp;#39;ve seen in the last plot

generic_input &amp;lt;- polygons_exp %&amp;gt;% 
  dplyr::group_by(phase_combo) %&amp;gt;% 
  dplyr::summarize(x = mean(x), y = mean(y)) %&amp;gt;% 
  dplyr::mutate(
    phase_list = stringr::str_split(phase_combo, pattern = &amp;quot; \\+ &amp;quot;)
  ) %&amp;gt;% 
  dplyr::mutate(
    phase_presence = purrr::map(
      phase_list,
      function(x, table) {as.integer(match(x, table, nomatch = 0) &amp;gt; 0) + 1},
      x = phases_exp
    )
  )

# The next part is a bit tricky. There is no standard way of getting the 
# kind of annotation we want into ggplot2. We have to go one level deeper
# and construct our own graphical objects (&amp;quot;grob&amp;quot;) using a couple of
# low level graphical functions from packages {grid} and {gridExtra}

catcher_outer &amp;lt;- vector(&amp;quot;list&amp;quot;, length = nrow(generic_input))
for(i in seq_along(catcher_outer)){
  
  catcher_inner &amp;lt;- vector(&amp;quot;list&amp;quot;, length = length(abbrv))
  for (j in seq_along(abbrv)) {
    catcher_inner[[j]] &amp;lt;- grid::grobTree(
      grid::rectGrob(
        gp = grid::gpar(
          fill = c(&amp;quot;black&amp;quot;, &amp;quot;white&amp;quot;)[generic_input$phase_presence[[i]][j]], 
          lwd = 2
        )
      ), 
      grid::textGrob(abbrv[j], gp = grid::gpar(fontsize = 10))
    )
  }
  
  catcher_outer[[i]] &amp;lt;- gridExtra::arrangeGrob(grobs = catcher_inner, ncol = 3)
  
}

# Collect the objects we just build along with some metadata in a tibble
grob_df &amp;lt;- generic_input %&amp;gt;% 
  dplyr::mutate(
    grob = catcher_outer,
    width = 0.17,
    height = 0.17
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally we now should have all the information/data we need for a pleasant plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_polygon( # phase assemblage polygons
    data = polygons_exp,
    mapping = aes(
      x = x, y = y, fill = feature_id, group = piece_id
    ),
    color = &amp;quot;black&amp;quot;,
    show.legend = FALSE,
    alpha = 0.25
  ) +
  geom_polygon( # single mineral phase polygons
    data = border_df_exp,
    aes(
      x = x, y = y, color = Phase
    ),
    fill = NA,
    size = 1.25
  ) +
  ggpmisc::geom_grob( # custom annotation grobs
    data = grob_df,
    aes(
      x = x, y = y, label = grob, vp.width = width, vp.height = height
    )
  ) +
  coord_cartesian(xlim = c(625, 825), ylim = c(50, 350), expand = FALSE) +
  paletteer::scale_fill_paletteer_d(&amp;quot;nord::algoma_forest&amp;quot;) +
  paletteer::scale_colour_paletteer_d(&amp;quot;yarrr::appletv&amp;quot;, direction = 1) +
  labs(
    y = &amp;quot;Pressure [MPa]&amp;quot;, x = &amp;quot;Temperature [°C]&amp;quot;,
    title = &amp;quot;Experimental Phase Stability of Nephelinitic Melt&amp;quot;
  ) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-14-phase-stability-diagrams/index_files/figure-html/exp_plot_complete-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So that’s the final plot. There are still a few differences to the original. On the one hand, custom text annotations for lines are hard to automatize, on the other hand, drawing your phase diagram automatically from data makes it easier to use colors. One could opt to use different linetypes for the mineral stability borders, but personally I found the color coding to be more clear. The plot could also use some manual fine tuning on the edges, but fortunately it’s very easy to export ggplot2 objects to &lt;code&gt;svg&lt;/code&gt;, so one could continue in e.g. &lt;a href=&#34;https://inkscape.org/de/&#34;&gt;Inkscape&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;example-2-thermodynamic-model-melts-data-set&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example 2: Thermodynamic Model (MELTS) Data set&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://melts.ofm-research.org/&#34;&gt;MELTS&lt;/a&gt; is “a software package designed to facilitate thermodynamic modeling of phase equilibria in magmatic systems. It provides the ability to compute equilibrium phase relations for igneous systems over the temperature range 500-2000 °C and the pressure range 0-2 GPa.”&lt;/p&gt;
&lt;p&gt;Over the last years, MELTS has (to my knowledge) become one of the most popular thermodynamic modeling suites for petrology-related research. The advantages of modelling over experimental approaches we have already discussed. Now we will look at a modeled data set with a much much finer temperature resolution than ever would be possible to accomplish in a lab.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You can download the data we will use from GitHub:
df_MELTS &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/Ignimbrit/exchange/master/data/2020/MELTS_DAWN_simplified.csv&amp;quot;)

phases_MELTS &amp;lt;- df_MELTS %&amp;gt;% dplyr::select(-P_MPa, -T_C) %&amp;gt;% colnames() 

df_MELTS&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 266 x 8
##      T_C P_MPa biotite clinopyroxene feldspar olivine orthopyroxene spinel
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;   &amp;lt;lgl&amp;gt;         &amp;lt;lgl&amp;gt;    &amp;lt;lgl&amp;gt;   &amp;lt;lgl&amp;gt;         &amp;lt;lgl&amp;gt; 
##  1 1222.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  2 1217.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  3 1212.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  4 1207.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  5 1202.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  6 1197.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  7 1192.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  8 1187.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
##  9 1182.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
## 10 1177.   100 FALSE   FALSE         FALSE    TRUE    FALSE         FALSE 
## # ... with 256 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This modelling data was kindly provided by &lt;a href=&#34;https://twitter.com/rockdoc11&#34;&gt;Dr. Dawn Ruth&lt;/a&gt; who, by the way, also gave me the initial impulse to look into phase diagram creation in R. I have slightly simplified the MELTS output to make the table fit the needs for this demonstration. As you can see, we are again provided with two independent variables &lt;code&gt;T_C&lt;/code&gt; and &lt;code&gt;P_MPa&lt;/code&gt; and a set of six dependent variable columns, indicating the presence of various mineral phases for a given P-T. Unlike with the experimental data set, however, this time we have 266 observations (=rows in the table) instead of just 12. Again we start with a quick visualization of the shape of data we got here.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_MELTS %&amp;gt;% tidyr::pivot_longer(biotite:spinel) %&amp;gt;% 
  dplyr::filter(value == TRUE) %&amp;gt;% 
  ggplot(aes(x = T_C, y = P_MPa, color = name)) +
  geom_jitter(width = 0, height = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-14-phase-stability-diagrams/index_files/figure-html/inspect_MELTS-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note that unlike in the experimental data set, the data in &lt;code&gt;df_MELTS&lt;/code&gt; is irregularly spaced. There are observations for 0.5, 1, 2 and 5 kbar (but not for e.g. 1.5 or 3 kbar). Also there are observations at higher temperatures, the higher the pressure in the simulation was. Because of the way we have build our tools for creating phase diagrams, we will first have to rectify those “holes” in the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# First we get rid of decimal places. We do not need to be that precise for the
# diagram and they make creating a regular grid unecessary difficult.

df_MELTS_simple &amp;lt;- df_MELTS %&amp;gt;% 
  dplyr::mutate(
    T_C = as.integer(round(T_C)),
    P_MPa = as.integer(P_MPa)
    )


# The regular grid shall have a T-resolution of 1°C and a P-resolution of
# 50 MPa, which (more or less) corresponds to the steps modeled in MELTS
# in this case.

range_MELTS_T &amp;lt;- seq(
  min(df_MELTS_simple$T_C), 
  max(df_MELTS_simple$T_C), 
  1
  )

range_MELTS_P &amp;lt;- seq(
  min(df_MELTS_simple$P_MPa), 
  max(df_MELTS_simple$P_MPa), 
  50
  )


# Next we fill in the holes in our regular grid.
# We do so by &amp;quot;wandering down&amp;quot; the pressure (later the temperature) sequence
# and whenever we encounter missing information about the presence of mineral
# phases, we assume nothing has changed since the last time we saw them.
# This is not so much different from what you would do when drawing a phase-
# diagram by hand. That workflow was inspired by a vignette of the tsibble
# package originally adressing missing values in time-series data
# https://tsibble.tidyverts.org/articles/implicit-na.html

grd_MELTS &amp;lt;- as.data.frame(expand.grid(range_MELTS_T, range_MELTS_P)) %&amp;gt;% 
  dplyr::rename(T_C = Var1, P_MPa = Var2) %&amp;gt;% 
  dplyr::arrange(dplyr::desc(P_MPa), dplyr::desc(T_C)) %&amp;gt;% 
  dplyr::left_join(df_MELTS_simple, by = c(&amp;quot;T_C&amp;quot;, &amp;quot;P_MPa&amp;quot;)) %&amp;gt;% 
  dplyr::group_split(P_MPa) %&amp;gt;% 
  purrr::map_dfr(
    .f = tidyr::fill, biotite:spinel,  .direction = &amp;quot;down&amp;quot;
    ) %&amp;gt;% 
  dplyr::group_split(T_C) %&amp;gt;% 
  purrr::map_dfr(
    .f = tidyr::fill, biotite:spinel,  .direction = &amp;quot;down&amp;quot;
    )%&amp;gt;% 
  dplyr::group_split(T_C) %&amp;gt;% 
  purrr::map_dfr(
    .f = tidyr::fill, biotite:spinel,  .direction = &amp;quot;up&amp;quot;
    )

grd_MELTS %&amp;gt;% tidyr::pivot_longer(biotite:spinel) %&amp;gt;% 
  dplyr::filter(value == TRUE) %&amp;gt;% 
  ggplot(aes(x = T_C, y = P_MPa, color = name)) +
  geom_jitter(width = 0, height = 10)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-14-phase-stability-diagrams/index_files/figure-html/MELTS_regularize-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the data is now both rectangular and regular and we can apply our established workflow of creating a raster and subsequently polygonizing it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Identify unique mineral assemblages
df_MELTS_grouped &amp;lt;- phase_group(grd_MELTS, biotite:spinel)

# Create assemblage polygons
polygons_MELTS &amp;lt;- polygonize_phasegroup(
  x = df_MELTS_grouped$T_C,
  y = df_MELTS_grouped$P_MPa,
  z = df_MELTS_grouped$group_no
)%&amp;gt;% 
  left_join(
    select(df_MELTS_grouped, group_no, phase_combo),
    by = c(&amp;quot;z&amp;quot; = &amp;quot;group_no&amp;quot;)
  )

# create single phase stability polygons
phase_borders_MELTS &amp;lt;-  purrr::map(
  dplyr::select(df_MELTS_grouped, biotite:spinel),
  find_phase_border,
  x = df_MELTS_grouped$T_C,
  y = df_MELTS_grouped$P_MPa,
  raster_res = c(1, 50),
  size = 1.02,
  smooth_factor = 4
) %&amp;gt;% 
  purrr::map2(
    .x = .,
    .y = seq(1, length(.)),
    function(.x, .y) {
      mutate(
        .x, 
        piece_id = factor(
          as.double(
            as.character(
              piece_id
            )
          ) + .y
        )
      )
    }
  )

# gather the polygons associated with the minerals in a single tibble
border_df_MELTS &amp;lt;- purrr::map2_dfr(
  phase_borders_MELTS,
  names(phase_borders_MELTS),
  function(.x, .y){mutate(.x, Phase = .y)}
) &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Create table-like assemblage markers as inset plots

# I will abbreviate the mineralnames to save space
# c.f. https://www.unige.ch/sciences/terre/research/Groups/mineral_resources/opaques/ore_abbreviations.php
abbrv_MELTS &amp;lt;- c(&amp;quot;bt&amp;quot;, &amp;quot;cx&amp;quot;, &amp;quot;fs&amp;quot;, &amp;quot;ol&amp;quot;, &amp;quot;ox&amp;quot;, &amp;quot;sp&amp;quot;)

# The table-shaped annotation label of the assemblage should be associated
# with the assemblage polygons we&amp;#39;ve seen in the last plot
generic_input_MELTS &amp;lt;- polygons_MELTS %&amp;gt;% 
  dplyr::group_by(phase_combo) %&amp;gt;% 
  dplyr::summarize(
    x = mean(x), 
    y = mean(y)
    ) %&amp;gt;% 
  dplyr::mutate(
    phase_list = stringr::str_split(phase_combo, pattern = &amp;quot; \\+ &amp;quot;)
  ) %&amp;gt;% 
  dplyr::mutate(
    phase_presence = purrr::map(
      phase_list,
      function(x, table) {as.integer(match(x, table, nomatch = 0) &amp;gt; 0) + 1},
      x = phases_MELTS
    )
  )


# Build the grobs
catcher_outer &amp;lt;- vector(&amp;quot;list&amp;quot;, length = nrow(generic_input_MELTS))
for(i in seq_along(catcher_outer)){
  
  catcher_inner &amp;lt;- vector(&amp;quot;list&amp;quot;, length = length(abbrv_MELTS))
  for (j in seq_along(catcher_inner)) {
    catcher_inner[[j]] &amp;lt;- grid::grobTree(
      grid::rectGrob(
        gp = grid::gpar(
          fill = c(&amp;quot;black&amp;quot;, &amp;quot;white&amp;quot;)[generic_input_MELTS$phase_presence[[i]][j]], 
          lwd = 1.2
        )
      ), 
      grid::textGrob(abbrv_MELTS[j], gp = grid::gpar(fontsize = 7.5))
    )
  }
  
  catcher_outer[[i]] &amp;lt;- gridExtra::arrangeGrob(grobs = catcher_inner, ncol = 3)
  
}

# Collect the objects we just build along with some metadata in a tibble
grob_df_MELTS &amp;lt;- generic_input_MELTS %&amp;gt;% 
  dplyr::mutate(
    grob = catcher_outer,
    width = 0.08,
    height = 0.08
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As the modeled data set is substantially larger than the experimental one we’ve been examining above, we will have to make some visual adjustments to our final phase diagram plot.&lt;/p&gt;
&lt;p&gt;Creating the annotation labels for the MELTS data is somewhat more difficult than for the experimental data. With the experimental data, we positioned those table-shaped annotations centrally within the polygon of the associated assemblage. This works (sometimes) for smaller plots with a limited number of different assemblages, but if we’d use that approach to annotate the MELTS-data phase diagram, the &lt;a href=&#34;https://bookdown.org/rdpeng/RProgDA/the-grid-package.html#grobs&#34;&gt;grobs&lt;/a&gt; would overlap, rendering them unreadable.&lt;/p&gt;
&lt;p&gt;To automatically avoid this issue, we would need some kind of repel-algorithm similar to the functionality provided by the &lt;a href=&#34;https://cran.r-project.org/web/packages/ggrepel/vignettes/ggrepel.html&#34;&gt;ggrepel&lt;/a&gt; package. Unfortunately, ggrepel applies to text annotations only with no simple way to use it for custom grobs. Developing our own repel algorithm on the other hand is way beyond the scope of this blog article, that by now has already escalated significantly beyond what I had initially envisioned for today’s issue.&lt;/p&gt;
&lt;p&gt;To avoid this problem for now I went with an admittedly dodgy fix of making the annotation grobs smaller and adding the &lt;code&gt;position = position_jitter()&lt;/code&gt; argument to &lt;code&gt;ggpmisc::geom_grob&lt;/code&gt;. If this was a plot meant for publication e.g. in a journal, one would probably have to invest the time to adjust each annotation position manually and maybe also set up an additional legend. For now we shall proceed as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_polygon(
    data = polygons_MELTS,
    mapping = aes(
      x = x, y = y, fill = feature_id, group = piece_id
    ),
    color = &amp;quot;black&amp;quot;,
    show.legend = FALSE,
    alpha = 0.3
  ) +
  geom_polygon(
    data = border_df_MELTS,
    aes(
      x = x, y = y, color = Phase, group = piece_id
    ),
    fill = NA,
    size = 1.25
  ) +
  ggpmisc::geom_grob(
    data = grob_df_MELTS,
    aes(
      x = x, y = y, label = grob, vp.width = width, vp.height = height
    ),
    position = position_jitter(width = 15, height = 15, seed = 42)
  ) +
  coord_cartesian(xlim = c(900, 1250), ylim = c(25, 525), expand = FALSE) +
  paletteer::scale_fill_paletteer_d(&amp;quot;ggsci::default_igv&amp;quot;, direction = 1) +
  paletteer::scale_colour_paletteer_d(&amp;quot;yarrr::appletv&amp;quot;, direction = 1) +
  labs(
    y = &amp;quot;Pressure [MPa]&amp;quot;, x = &amp;quot;Temperature [°C]&amp;quot;,
    title = &amp;quot;Phase Stability of a Magma Modeled with MELTS&amp;quot;
  ) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-14-phase-stability-diagrams/index_files/figure-html/MELTS_plot_complete-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;concluding-remarks&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Concluding Remarks&lt;/h2&gt;
&lt;p&gt;Creating a workflow to plot mineral phase stability diagrams directly from data and with a minimum of manual alteration has proven to be quite a laborious task in itself. If you are looking for something similar, I hope I could provide you here with some inspiration on how to tackle some of the more arcane problems of confining areas of shared properties within a cartesian grid system. Now that the tools presented in this blog post exist, I can definitely see myself applying them in the future in quite a range of situations, not all of them necessarily related to petrology. As the whole workflow is based around the ideas of grouped polygons, much of it should work for certain spatial issues, too.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Geochemical Modelling of 1D-Transport with Non-Steady Contaminant Input (Tidyphreeqc Part 1)</title>
      <link>/post/2020-04-14-tidyphreeqc_1/tidyphreeqc_part_1/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/2020-04-14-tidyphreeqc_1/tidyphreeqc_part_1/</guid>
      <description>


&lt;p&gt;&lt;a href=&#34;https://www.usgs.gov/software/phreeqc-version-3&#34;&gt;PHREEQC&lt;/a&gt; is a powefull program for hydrogeochemical modelling developed by the &lt;a href=&#34;https://en.wikipedia.org/wiki/United_States_Geological_Survey&#34;&gt;USGS&lt;/a&gt;. I like to think of it as a construction kit for (series of) virtual beakers, where all sorts of reactants can be mixed together.&lt;/p&gt;
&lt;p&gt;So while PHREEQC in itself is a tremendous framework, practical work with that program is often limited by a lack of native features that allow for iterativ or repetitive modelling routines. A PHREEQC-program is a set of command strings, but there is no comfortable way e.g. to set up a for-loop to map out a matrix of variables.&lt;/p&gt;
&lt;p&gt;As far as I am aware, several attempts have been made to overcome this issue and to complement PHREEQC with programmable functionality. PHREEQC itself has an inbuild interpreter for &lt;a href=&#34;https://en.wikipedia.org/wiki/BASIC&#34;&gt;BASIC&lt;/a&gt; and the program &lt;a href=&#34;http://www.phreeplot.org/&#34;&gt;PHREEPLOT&lt;/a&gt; implements routines to generate complex figures from repetitive calls to PHREEQC. Personally, I found those interfaces unsuitable for my daily workflow, but your experience may vary.&lt;/p&gt;
&lt;p&gt;My favourite way of interacting with PHREEQC as of today is the &lt;a href=&#34;https://www.r-project.org/&#34;&gt;R&lt;/a&gt;-Package &lt;a href=&#34;https://github.com/paleolimbot/tidyphreeqc/blob/master/README.md&#34;&gt;Tidyphreeqc&lt;/a&gt; by &lt;a href=&#34;https://fishandwhistle.net/cv/&#34;&gt;Dewey Dunnington, phd&lt;/a&gt;. It provides various functions to make the construction of PHREEQC-input files comfortable and automatable. You can push your input directly into PHREEQC and retrieve the output without ever having to leave your cozy R-Studio panes. Due to this close integration, it becomes easy to harvest R’s capabilities as a programming language and its excuisite visualization tools.&lt;/p&gt;
&lt;p&gt;The most obvious (and probably most important) use case for coupling PHREEQC with a fully programmable interface is to generate thousands of models to map out the effect of parameter combinations on a discrete chemical system. For Tidyphreeqc this has been demonstrated in &lt;a href=&#34;https://fishandwhistle.net/post/2018/pourbaix-ish-diagrams-using-phreeqc-and-r/&#34;&gt;this Blogpost&lt;/a&gt; by the packages’ creator by generating the &lt;a href=&#34;https://en.wikipedia.org/wiki/Pourbaix_diagram&#34;&gt;Pourbaix-Diagram&lt;/a&gt; for Manganese.&lt;/p&gt;
&lt;p&gt;In todays post we will explore another advantage of the Tidyphreeqc-Package: establishing non-steady solution input into a 1D-Transport coloumn.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Digital Point Counting for Mineralogical Thin Sections</title>
      <link>/post/digital_point_counting/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/digital_point_counting/</guid>
      <description>


&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Point_counting_(geology)&#34;&gt;Mineral point counting&lt;/a&gt; in &lt;a href=&#34;https://en.wikipedia.org/wiki/Thin_section&#34;&gt;geological thin sections&lt;/a&gt; is a simple yet very useful technique that aims at determining the relative proportion of different minerals within a rock. Quantifying this can give insight on the evolution of a magma within different stages of melt evolution or even underpin comparisons of similar melts from different magmatic complexes. Point counting in it’s classical form is, however, also &lt;a href=&#34;https://www.youtube.com/watch?v=3YJHryX7f1U&#34;&gt;famously laborious&lt;/a&gt;, as it traditionally involves manually shifting the microscopes stage by a fixed interval and basically keeping a tally of what you see at each position.&lt;/p&gt;
&lt;p&gt;With the advent of computerized image processing techniques, digital point counting offers the potential to gather the desired information at a fraction of the time and effort used for the manual technique. This makes it possible to apply point counting to large databases of thin section imagery. I would argue that being able to massively broaden the base of available point counting data by (semi-)automating the gathering process is in itself a significant contribution to the importance of the role that point counting can play in geological investigations.&lt;/p&gt;
&lt;p&gt;In this blogpost we will explore possibilities for digital point counting using &lt;a href=&#34;https://www.r-project.org/&#34;&gt;R&lt;/a&gt; and the &lt;a href=&#34;https://github.com/Ignimbrit/mincountr/blob/master/README.md&#34;&gt;mincountr&lt;/a&gt; library, a little package I wrote to bundle a few basic tools to ease some of the more repetitive tasks of that subject.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# You can install the mincountr package from github
# remotes::install_github(&amp;quot;Ignimbrit/mincountr&amp;quot;)

library(mincountr)
library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Say you have collected an image from a mineral-bearing thin section e.g. in an electron microprobe session and wonder about the relative share of the different phases in your sample. Your image might look something like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;myimage &amp;lt;- mcr_load_image(
  system.file(&amp;quot;extdata&amp;quot;, &amp;quot;testim.png&amp;quot;, package = &amp;quot;mincountr&amp;quot;)
  )
plot(myimage)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-10-mincountr/index_files/figure-html/load%20image-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the different levels of brightness in the image allows the observer to distinguish between several distinct phases. There is a large, very bright mineral, some lightgrey minerals, a darkgrey, glassy matrix, some black holes and so on. With &lt;code&gt;mincountr&lt;/code&gt; we are able to translate this qualitative optical assessment into practical numbers. First let’s have a look at the density-distribution (like a continuous histogram) of the images brightness.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mcr_inspect_phases(myimage)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-10-mincountr/index_files/figure-html/plot%20brightness-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we can see that the four phases we distinguished in the image above show up in the density distribution as distinct peaks of specific brightness values. We can use this to assign a brightness-range to certain phases.
The peak on the far left (most dark) corresponds likely to the hole we’ve seen in our thin section image. The peak’s value range lays between value ~0-0.05. Other peaks (from left to right) range from 0.3-0.45 (glassy matrix?), from 0.5-0.65 (light gray minerals?) and from 0.92-1 (bright minerals?). Let me illustrate what I mean:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mcr_inspect_phases(myimage) +
  ggplot2::geom_vline(
    xintercept = c(0, 0.05, 0.3, 0.45, 0.5, 0.65, 0.92, 1),
    color = &amp;quot;red&amp;quot;
      )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-10-mincountr/index_files/figure-html/illustrate%20peakborders-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now in this example we just chose the borders of the peak by hand. This is probably the safest method of constraining your brightness-levels, as it allows you to chip in your personal mineralogical expertise. However, sometimes you have a large stack of images you want to work with and probably not the time to constrain peak-ranges by hand every single time. This is why mincountr comes with an automatic mechanism to generate those numbers for you.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;myconstrains &amp;lt;- mcr_autoconstrain(myimage)
print(myconstrains)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 4
##      x1 peakpos     x2    ID
##   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1 0       0     0.0283     1
## 2 0.338   0.382 0.437      2
## 3 0.501   0.559 0.612      3
## 4 0.963   0.989 1          4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;mcr_autoconstrain&lt;/code&gt; function automatically detects peaks and notes their position (&lt;code&gt;peakpos&lt;/code&gt;) and then goes on and calculates their borders both on the left-hand-side (&lt;code&gt;x1&lt;/code&gt;) and on the right hand side (&lt;code&gt;x2&lt;/code&gt;). Under the hood, &lt;code&gt;mcr_autoconstrain&lt;/code&gt; identifies turning points in the brightness-“spectra”, cuts it into pieces, one piece per peak, and then loops over the single-peak spectra-pieces to calculate the half-height-width.&lt;/p&gt;
&lt;p&gt;Now we have all the information we need to assign certain areas of our original image to distinct phases. The mincountr-package comes with a function that lets you inspect what this assignment looks like.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mcr_inspect_assignment(
  myimage,
  lhs = myconstrains$x1,
  rhs = myconstrains$x2
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-10-mincountr/index_files/figure-html/check%20assignment-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As every pixel in the original image was now assigned to one of the 7 levels shown in the picture above, we can go ahead and just count the pixels and then calculate the relative share of each group.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;myresult &amp;lt;- mcr_herd_minerals(
  myimage,
  lhs = myconstrains$x1,
  rhs = myconstrains$x2
)
print(myresult)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 3
##   Phase_ID pixels proportion_percentage
##      &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt;                 &amp;lt;dbl&amp;gt;
## 1        1  34862                  9.88
## 2        2  23583                  6.68
## 3        3  97086                 27.5 
## 4        4  18786                  5.32
## 5        5  70327                 19.9 
## 6        6  23485                  6.66
## 7        7  84749                 24.0&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Working with climate data from the German Meteorological Service (DWD)</title>
      <link>/post/working-with-rdwd/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/working-with-rdwd/</guid>
      <description>


&lt;p&gt;Many tasks in the realm of Hydrogeology require data from meteorological observations to be taken into account. If you are working on such a project that happens to be located in Germany, you can count yourself lucky, because the &lt;a href=&#34;www.dwd.de&#34;&gt;Deutscher Wetterdienst&lt;/a&gt; (DWD, German Meteorological Service) is providing a cornucopia of both brand new and historic data for free via its &lt;a href=&#34;https://opendata.dwd.de/climate_environment/CDC/&#34;&gt;climate datacenter&lt;/a&gt; (CDC). The interface to that server, however, can be somewhat confusing at first, due to the mass of very different data formats and the poignant absence of any meaningful GUI. In this post we will therefore explore how we can use &lt;a href=&#34;www.r-project.org&#34;&gt;R&lt;/a&gt; and specifically the &lt;a href=&#34;https://cran.r-project.org/web/packages/rdwd/index.html&#34;&gt;rdwd&lt;/a&gt; library to access data from the CDC and turn it into a (hopefully) meaningful visualization.&lt;/p&gt;
&lt;p&gt;For demonstration purposes, let’s look at how the number of days with snowcover changed in Germany over the years, a task I came up with this winter, while looking out of the window and, well, missing snow. As mentioned, we will use R-package rdwd, which &lt;a href=&#34;https://bookdown.org/brry/rdwd/&#34;&gt;ships with an excellent documentation&lt;/a&gt; that we can use to look up how to find the data we are interested in, download it and load it into R.&lt;/p&gt;
&lt;p&gt;By and at large, DWD-datasets can be divided into two categories:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Data associated with a discrete weather station&lt;/li&gt;
&lt;li&gt;Gridded data spanning a larger area (usually all of Germany)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As we are interested in snow cover data for all of Germany, we will look into the gridded data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# first let&amp;#39;s get our R-session set up properly
library(tidyverse) # this is for data-wrangling and -visualisation 
library(rdwd) # this is where we get our data from
library(raster) # this will help us work with raster data
library(sp) # this is used here to convert between spatial data formats
library(paletteer) # pretty color palettes for plots
library(magick) # his will be used to render the final animation

# The next step is to locate the data we are interested in on the CDC-Server

# Load the adresses of all available files 
data(gridIndex)
# only keep the adresses of data we are interested in
links &amp;lt;- gridIndex[str_detect(gridIndex, &amp;quot;^annual/snowcover_days/grids&amp;quot;)]
head(links, n = 3) #inspect what we&amp;#39;ve got&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;annual/snowcover_days/grids_germany_annual_snowcover_days_1951_17.asc.gz&amp;quot;
## [2] &amp;quot;annual/snowcover_days/grids_germany_annual_snowcover_days_1952_17.asc.gz&amp;quot;
## [3] &amp;quot;annual/snowcover_days/grids_germany_annual_snowcover_days_1953_17.asc.gz&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tail(links, n = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;annual/snowcover_days/grids_germany_annual_snowcover_days_2016_17.asc.gz&amp;quot;
## [2] &amp;quot;annual/snowcover_days/grids_germany_annual_snowcover_days_2017_17.asc.gz&amp;quot;
## [3] &amp;quot;annual/snowcover_days/grids_germany_annual_snowcover_days_2018_17.asc.gz&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So we managed to locate the position of 68 files of gridded snow-cover data. Each file contains the data for a single year and we have files spanning the period from 1951 to 2018. Now that we know where we can find the data, the next steps are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Downloading the data to your hard disc&lt;/li&gt;
&lt;li&gt;Actually loading the data into R&lt;/li&gt;
&lt;li&gt;Shaping the data into a format to work on with&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is achieved mainly by two functions provided by &lt;code&gt;rdwd&lt;/code&gt;. We will download the data with &lt;code&gt;dataDWD&lt;/code&gt; and load it with &lt;code&gt;readDWD&lt;/code&gt;. Please note that the downloaded files are stored on your hard drive and take up approximately 200 MB of space. As we need to download all 68 files, we will iterate over every element of &lt;code&gt;links&lt;/code&gt;, applying the function-in-question on the way.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map(
  links, 
  dataDWD, 
  base = gridbase, 
  joinbf = TRUE, 
  read = FALSE
  )

# Executed like this, the downloaded files will be stored in a subdirectory
# named &amp;quot;DWDdata/&amp;quot;. Let&amp;#39;s see what we&amp;#39;ve got!

lokallinks &amp;lt;- list.files(&amp;quot;DWDdata/&amp;quot;)

# In the next step we will do something a bit more complex.
# The goal is to load the downloaded files into R and give them a structure
# that is convenient to work with. As we want this to happen with all 68
# files, we will define a function that loads a file and returns the data 
# in the desired way and then apply said function to every file.

grabmydata &amp;lt;- function(file){
  
  # first let&amp;#39;s load the data and store it in a nice data.frame
  df &amp;lt;- readDWD(paste0(&amp;quot;DWDdata/&amp;quot;, file)) %&amp;gt;% 
    as(&amp;quot;SpatialPixelsDataFrame&amp;quot;) %&amp;gt;% 
    as.data.frame()
  
  # give it some nice coloumn names
  colnames(df) &amp;lt;- c(&amp;quot;value&amp;quot;, &amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;)
  
  # next we want to know the year that the data corresponds to
  year &amp;lt;- file %&amp;gt;% 
    str_remove(&amp;quot;annual_snowcover_days_grids_germany_annual_snowcover_days_&amp;quot;) %&amp;gt;% 
    str_remove(&amp;quot;_17.asc.gz&amp;quot;) %&amp;gt;% 
    as.integer()
  
  # Now just store the year as another variable in the data.frame
  df %&amp;gt;% mutate(year = year)
}

# Now that we have a function that knows how to handle a file, iterate over
# all files and append the result rowwise.
df &amp;lt;- map_dfr(lokallinks, grabmydata)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have all the data nicely loaded into our global environment, we can start visualizing them. In a first step, let’s look at the situation in the year 2008. We can later expand this to include all years.&lt;/p&gt;
&lt;p&gt;There is one little catch, though. To make the figure more visually appealing, we will apply a logarithmic color gradient, while keeping the actual scale linear.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_08 &amp;lt;- df %&amp;gt;% 
  filter(year == 2008)

# In the plot legend we want to see what the color looks like for the following 
# numbers of days of snow cover:

snow_days_legend &amp;lt;- c(0.1, 0.3, 1, 3, 10, 30)

ggplot(
  data = df_08,
  aes(
    x = x,
    y = y,
    fill = log10(value)
  )
) +
  geom_tile() +
    annotate(
      geom = &amp;quot;label&amp;quot;, x = max(df$x) - 140000, y = min(df$y) - 10000,
      label = &amp;quot;source: Deutscher Wetterdienst&amp;quot;,
      size = 2
    ) +
  labs(
    title = &amp;quot;Total days of snow in 2008&amp;quot;,
    fill = &amp;quot;days with\nsnow-cover&amp;quot;
  ) +
  scale_fill_paletteer_c(
    &amp;quot;ggthemes::Classic Orange-Blue&amp;quot;,
    limits = log10(c(0.1, 60)),
    breaks = log10(snow_days_legend),
    labels = snow_days_legend
  ) +
  theme_bw() +
  theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Schnee_2008.png&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now this is nice, but it only shows us the situation for a single year, which tells us nothing about how the snow-cover-situation changed over time. Question is: how do we include the plots for the other years? One might be tempted to work with facets here, but faceting 68 plots will result in a visual overload. The better solution is to build a little gif.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_list &amp;lt;- df %&amp;gt;% 
  group_split(year)

# Make a time-series vector for iteration
ts &amp;lt;- map_dbl(df_list, function(x) {first(x$year)})

# here we iterate along the years, plotting each annual dataset and subsequently
# saving the resulting image to the hard disc. This might take a while. The
# produced data has a size of ~7Mb

# ATTENTION: note that I am saving the plots in a subdirectory called &amp;quot;facets&amp;quot;.
# ggsave will not create that subdir automatically, so you may have to set it up
# manually. I decided not to create it in this code chunk as that would equal
# messing up other peoples folder-system, which I was told is bad style.

for (i in seq_along(ts)){
  gif_facet &amp;lt;- ggplot(
    data = df_list[[i]],
    aes(
      x = x,
      y = y,
      fill = log10(value)
    )
  ) +
    geom_tile() +
    annotate(
      geom = &amp;quot;label&amp;quot;, x = max(df$x) - 140000, y = min(df$y) - 10000,
      label = &amp;quot;source: Deutscher Wetterdienst&amp;quot;,
      size = 2
    ) +
    labs(
      title = paste0(&amp;quot;Total days of snow in &amp;quot;, ts[i]),
      fill = &amp;quot;days with\nsnow-cover&amp;quot;
    ) +
    scale_fill_paletteer_c(
      &amp;quot;ggthemes::Classic Orange-Blue&amp;quot;,
      limits = log10(c(0.1, 60)),
      breaks = log10(snow_days_legend),
      labels = snow_days_legend
    ) +
    theme_bw() +
    theme(
      axis.title = element_blank(),
      axis.text = element_blank(),
    )
  
  ggsave(
    filename = paste0(&amp;quot;facets/snow_&amp;quot;, ts[i],&amp;quot;.png&amp;quot;), # make sure this works on your machine!
    plot = gif_facet,
    width = 10, height = 12, units = &amp;quot;cm&amp;quot;, dpi = 150
  )
}

# get the path of the created images
plotlist &amp;lt;- list.files(&amp;quot;facets/&amp;quot;, pattern = &amp;quot;.png$&amp;quot;)

# construct the actual gif
image_write_gif(
  image_read(paste0(&amp;quot;facets/&amp;quot;, plotlist)),
  path = &amp;quot;Snowdays_in_Ger.gif&amp;quot;,
  delay = 0.5
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;featured.gif&#34; width=&#34;400px&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Impressum</title>
      <link>/impressum/</link>
      <pubDate>Sun, 05 Apr 2020 18:28:03 +0200</pubDate>
      <guid>/impressum/</guid>
      <description>&lt;h2 id=&#34;angaben-gemäß--5-tmg&#34;&gt;&lt;strong&gt;Angaben gemäß § 5 TMG&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Dr. rer. nat. Sören Wilke&lt;br&gt;
Achillesstraße 94&lt;br&gt;
13125 Berlin&lt;/p&gt;
&lt;h2 id=&#34;kontakt&#34;&gt;&lt;strong&gt;Kontakt&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Telefon: +49 (0) 151 6453 2291&lt;br&gt;
E-Mail: &lt;a href=&#34;mailto:swilke@gmx.de&#34;&gt;swilke@gmx.de&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;haftung-für-inhalte&#34;&gt;&lt;strong&gt;Haftung für Inhalte&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Als Diensteanbieter sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten nach den
allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht
verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen oder nach Umständen zu
forschen, die auf eine rechtswidrige Tätigkeit hinweisen.
Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen
Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung ist jedoch erst ab dem Zeitpunkt der
Kenntnis einer konkreten Rechtsverletzung möglich. Bei Bekanntwerden von entsprechenden
Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.&lt;/p&gt;
&lt;h3 id=&#34;haftung-für-links&#34;&gt;&lt;strong&gt;Haftung für Links&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Unser Angebot enthält Links zu externen Websites Dritter, auf deren Inhalte wir keinen Einfluss haben.
Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen. Für die Inhalte der
verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten
Seiten wurden zum Zeitpunkt der Verlinkung auf mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte
waren zum Zeitpunkt der Verlinkung nicht erkennbar.
Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer
Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links
umgehend entfernen.&lt;/p&gt;
&lt;h3 id=&#34;urheberrecht&#34;&gt;&lt;strong&gt;Urheberrecht&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen
Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung außerhalb der
Grenzen des Urheberrechtes bedürfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers.
Downloads und Kopien dieser Seite sind nur für den privaten, nicht kommerziellen Gebrauch gestattet.
Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter
beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine
Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei
Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.&lt;/p&gt;
&lt;p&gt;Quelle:

&lt;a href=&#34;https://www.e-recht24.de/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eRecht24&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Publication</title>
      <link>/publication/</link>
      <pubDate>Sun, 05 Apr 2020 15:51:57 +0200</pubDate>
      <guid>/publication/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-academic&#34;&gt;Create slides in Markdown with Academic&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; | 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://spectrum.chat/academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rhyolite-MELTS vs DERP – Reply to Comment by Gualda et al. on ‘The Effect of Anorthite Content and Water on Quartz–Feldspar Cotectic Compositions in the Rhyolitic System and Implications for Geobarometry’ by Wilke et al. (2017), Journal of Petrology, 58, No. 4, 789–818</title>
      <link>/publication/derp2/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      <guid>/publication/derp2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The Effect of Anorthite Content and Water on Quartz–Feldspar Cotectic Compositions in the Rhyolitic System and Implications for Geobarometry</title>
      <link>/publication/derp1/</link>
      <pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate>
      <guid>/publication/derp1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The system quartz-albite-orthoclase-anorthite-H2O as a geobarometer: experimental calibration and application to rhyolites of the Snake River Plain, Yellowstone, USA</title>
      <link>/publication/promotion/</link>
      <pubDate>Fri, 24 Jun 2016 00:00:00 +0000</pubDate>
      <guid>/publication/promotion/</guid>
      <description></description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>/project/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>/project/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Practical Method for Accurate Measurement of Trace Level Fluorine in Mg‐ and Fe‐Bearing Minerals and Glasses Using Electron Probe Microanalysis</title>
      <link>/publication/microprobe/</link>
      <pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate>
      <guid>/publication/microprobe/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Experimental investigation of the effect of Ca, Fe and Ti on cotectic compositions of the rhyolitic system</title>
      <link>/publication/carodata/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
      <guid>/publication/carodata/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
